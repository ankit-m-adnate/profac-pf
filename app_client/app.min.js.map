{"version":3,"sources":["main.js","account/account.controller.js","admin/apps.controller.js","choosePlan/choosePlan.controller.js","home/home.controller.js","payments/payment.controller.js","payments/paymentFailure.controller.js","payments/paymentSuccess.controller.js","setup/setup.controller.js","auth/forgot/forgot.controller.js","auth/login/login.controller.js","auth/register/register.controller.js","common/services/authentication.service.js","common/services/breadcrumbHelper.service.js","common/services/data.service.js","common/services/metadata.service.js","common/services/notification.service.js","common/services/unauthHandler.factory.js","common/directives/notification/notification.controller.js","common/directives/notification/notification.directive.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js","common/directives/pwStrength/pwStrength.controller.js","common/directives/pwStrength/pwStrength.directive.js"],"names":[],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('processFactory', ['ngRoute', 'ngMaterial', 'ngAnimate' ,'ngAria', 'ngMessages', 'angular.filter', 'ng-breadcrumbs', 'gridster', 'angular-loading-bar', 'ngDraggable', 'md.data.table' , 'ngFileUpload']);\r\n\r\n  function config ($httpProvider, $routeProvider, $locationProvider, $mdThemingProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n    $httpProvider.interceptors.push('errorInterceptor');\r\n    $routeProvider\r\n    //    .when('/checkout', {\r\n    //   templateUrl : 'payments/payment.html',\r\n    //   controller : 'paymentController'\r\n    // })\r\n    .when('/payment/failure', {\r\n      templateUrl : 'payments/paymentFailure.html',\r\n      controller : 'paymentFailureController'\r\n    })\r\n    // .when('/payment/success', {\r\n    //   templateUrl : 'payments/paymentSuccess.html',\r\n    //   controller : 'paymentSuccessController'\r\n    // })\r\n      .when('/', {\r\n        templateUrl: '/auth/login/login.view.html',\r\n        controller: 'loginCtrl',\r\n        controllerAs: 'vm',\r\n        label : 'Welcome'\r\n      })\r\n      .when('/setup', {\r\n        templateUrl: '/setup/setup.view.html',\r\n        controller: 'setupCtrl',\r\n        controllerAs: 'vm',\r\n        label : 'Setup'\r\n      })\r\n      .when('/register', {\r\n        templateUrl: '/auth/register/register.view.html',\r\n        controller: 'registerCtrl',\r\n        controllerAs: 'vm',\r\n        label : 'Register'\r\n      })\r\n      .when('/forgot', {\r\n        templateUrl: '/auth/forgot/forgot.view.html',\r\n        controller: 'forgotCtrl',\r\n        controllerAs: 'vm',\r\n        label : 'Forgot Password'\r\n      })\r\n      .when('/home', {\r\n        templateUrl: '/home/home.view.html',\r\n        controller: 'homeCtrl',\r\n        controllerAs: 'vm',\r\n        label : 'Home'\r\n      })\r\n      .when('/master', {\r\n        templateUrl: '/admin/apps.view.html',\r\n        controller: 'appsCtrl',\r\n        controllerAs: 'vm',\r\n        label : 'Admin'\r\n      })\r\n      .when('/login', {\r\n        templateUrl: '/auth/login/login.view.html',\r\n        controller: 'loginCtrl',\r\n        controllerAs: 'vm',\r\n        label : 'Login'\r\n      })\r\n      .when('/account', {\r\n        templateUrl: '/account/account.view.html',\r\n        controller: 'accountCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n \r\n\r\n\r\n\r\n    \r\n    .when('/choosePlan', {\r\n      templateUrl : 'choosePlan/choosePlan.html',\r\n      controller  : 'choosePlanController'\r\n    })\r\n\r\n      .otherwise({redirectTo: '/'});\r\n\r\n    // use the HTML5 History API\r\n    //$locationProvider.html5Mode(false);\r\n    $locationProvider.html5Mode({\r\n   enabled: false,\r\n   requireBase: false,\r\n\r\n});\r\n//.hashPrefix('!');\r\n \t\t\t\t\t\t\t\t\t$mdThemingProvider.theme('grey', 'default')\r\n      .primaryPalette('grey');\r\n    $mdThemingProvider.theme('input')\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n  \tif($location.path() == '/choosePlan' && $location.search().access_token){\r\n  \t\tauthentication.saveToken($location.search().access_token)\r\n  \t}\r\n    if ($location.path() !== '/register' && $location.path() !== '/login' && $location.path() !== '/' &&  $location.path()!== '/forgot' &&  $location.path()!== '/choosePlan' && !authentication.isLoggedIn()) {\r\n      $location.path('/');\r\n    }\r\n    if(authentication.isLoggedIn() && ($location.path() === '/register' || $location.path() === '/login' || $location.path() === '/')){\r\n      $location.path('/home');\r\n    }\r\n    if(authentication.isLoggedIn() && authentication.currentUser()._imft == true && $location.path() !== '/choosePlan'){\r\n      $location.path('/setup');\r\n    }\r\n\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n    if($location.path() == '/choosePlan' && $location.search().access_token){\r\n  \t\tauthentication.saveToken($location.search().access_token)\r\n  \t}\t\r\n      if ($location.path() !== '/register' && $location.path() !== '/login' && $location.path() !== '/' && $location.path()!== '/forgot' &&  $location.path()!== '/choosePlan' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n      if(authentication.isLoggedIn() && ($location.path() === '/register' || $location.path() === '/login' || $location.path() === '/')){\r\n        $location.path('/home');\r\n      }\r\n      if(authentication.isLoggedIn() && authentication.currentUser()._imft == true && $location.path() !== '/choosePlan'){\r\n        $location.path('/setup');\r\n      }\r\n    });\r\n  }\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .config(['$httpProvider', '$routeProvider', '$locationProvider', '$mdThemingProvider', config])\r\n    .run(['$rootScope', '$location', 'authentication', run])\r\n    .factory('errorInterceptor', function ($q,$window) {\r\n\r\n   var preventFurtherRequests = false;\r\n\r\n   return {\r\n       request: function (config) {\r\n\r\n           if (preventFurtherRequests) {\r\n               return;\r\n           }\r\n\r\n           return config || $q.when(config);\r\n       },\r\n       requestError: function(request){\r\n                       //console.log(\"error\");\r\n           return $q.reject(request);\r\n       },\r\n       response: function (response) {\r\n           return response || $q.when(response);\r\n       },\r\n       responseError: function (response) {\r\n                       //console.log(response);\r\n\r\n           if (response && response.status === 401) {\r\n               //console.log(\"401 error\");\r\n                               $window.localStorage.removeItem('_pft');\r\n                               $window.location.href = window.location.origin;\r\n           }\r\n\r\n\r\n           return $q.reject(response);\r\n       }\r\n   };\r\n});\r\n\r\n})();\r\n","(function() {\n\n\tangular\n\t.module('processFactory')\n\t.controller('accountCtrl', accountCtrl);\n\n\taccountCtrl.$inject = ['$http', 'breadcrumbs', '$mdToast', 'authentication','$location', '$scope'];\n\tfunction accountCtrl ($http, breadcrumbs, $mdToast, authentication,$location, $scope) {\n\t\tvar vm = this;\n\t\tvm.currentUser = authentication.currentUser();\n\t\tvm.getOrganizationDeatilsLoading = true;\n\t\tvm.getUserProfileLoading = true;\n\t\tvm.countDown_text = 0;\n\t\tvm.profile = {\n\t\t\tfirst_name : vm.currentUser.fn,\n\t\t\tlast_name : vm.currentUser.ln,\n\t\t\temail : vm.currentUser.email,\n\t\t\tmobile : vm.currentUser._m\n\t\t}\n\n\t\tfunction getUserProfile() {\n\t\t\tvm.notification = '';\n\t\t\tvm.getUserProfileLoading = true;\n\t\t\t$http.get('/users/getPFProfile/' + vm.currentUser.email).then(function(success){\n\t\t\t\tvm.userDetails = success.data;\n\t\t\t\tvm.getUserProfileLoading = false;\n\t\t\t\tvm.otptry = (vm.userDetails.otp) ? vm.userDetails.otp.retries : 0;\n\t\t\t}, function(err){\n\t\t\t\tvm.getUserProfileLoading = false;\n\t\t\t})\n\t\t}\n\n\t\tfunction getOrganizationDeatils() {\n\t\t\tvm.getOrganizationDeatilsLoading = true;\n\t\t\t$http.get('/pFactory/getOrgPlans/' + vm.currentUser.org).then(function(success){\n\t\t\t\tvm.orgDetails = success.data;\n\t\t\t\tvm.getOrganizationDeatilsLoading = false;\n\t\t\t}, function(err){\n\t\t\t\tvm.getOrganizationDeatilsLoading = false;\n\t\t\t})\n\t\t}\n\n\t\tvm.verifyMobile = function(tryNumber){\n\t\t\t$http.post('/users/verifyMobile', {_i : vm.currentUser._id, _m : vm.currentUser._m, _t : (tryNumber + 1)}).then(function(success){\n\t\t\t\tgetUserProfile();\n\t\t\t}, function(err){\n\t\t\t\tvm.notification = \"This service is currently unavailable.\"\n\t\t\t})\n\t\t}\n\n\t\tvm.otpAlive = function(){\n\t\t\tif(!vm.getUserProfileLoading && vm.userDetails.otp){\n\t\t\t\tvar d = new Date();\n\t\t\t\tvm.ex = new Date(vm.userDetails.otp.expires);\n\t\t\t\tvar diff = (vm.ex.getTime() - d.getTime()) / 1000;\n\t\t\t\t\tif((vm.userDetails.mobileVerified) == 'N' && (diff > 0)){\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\n\t\tvm.submitOTP = function(){\n\t\t\t$http.post('/users/submitOTP' ,{\n\t\t\t\t_i : vm.currentUser._id,\n\t\t\t\t_c : vm.otp\n\t\t\t}).then(function(success){\n\t\t\t\tgetUserProfile();\n\t\t\t}, function(err){\n\t\t\t\tvm.notification = err.data.message;\n\t\t\t})\n\t\t}\n\n\t\tgetOrganizationDeatils();\n\t\tgetUserProfile();\n\n\n\t\t//for mobile field validation\n\t\tvm.forMobile = function(e){\n\t      if((e.keyCode >= 48 && e.keyCode <= 57) || e.keyCode == 9 || e.keyCode == 8 || e.keyCode == 46 || e.keyCode == 37 || e.keyCode == 39){\n\n\t      }\n\t      else\n\t        e.preventDefault();\n\t    }\n\n    \t//for menu open/close and menu triangle\n    \tvm.openMenu = function($mdOpenMenu, ev) {\n    \t\toriginatorEv = ev;\n    \t\t$mdOpenMenu(ev);\n    \t\t$('#profileMenu').addClass('arr-down');\n    \t};\n\n    \t$scope.$on('$mdMenuClose', function(){\n    \t\t$('#profileMenu').removeClass('arr-down');    \n    \t})\n\n    \t//for logout\n    \t      vm.logout = function(){\n        $http.get('/pFactory/logout/')\n          .then(function(response) {\n            //$scope.gists = response.data;\n            //console.log(response);\n            if(response.status === 200){\n              authentication.logout();\n              $location.path('/');\n            }\n          })\n          .catch(function(response) {\n            //console.error('Gists error', response.status, response.data);\n          })\n          .finally(function() {\n            //console.log(\"finally finished gists\");\n          });\n      }\n    }\n\n})();\n","(function() {\r\n  \r\n  angular\r\n    .module('processFactory')\r\n    .controller('appsCtrl', appsCtrl);\r\n  \r\n  \tappsCtrl.$inject = ['$http', 'breadcrumbs', '$mdToast', '$mdPanel' , 'Upload' , '$mdDialog'];\r\n    function appsCtrl ($http, breadcrumbs, $mdToast, $mdPanel , Upload , $mdDialog, mdPanelRef) {\r\n    \t\r\n    \tvar vm = this;\r\n        vm.apps = {};\r\n        vm.categoryMaster = ['Applications' , 'HR4U' , 'Connect' , 'Tools' , 'Dashboard' , 'Codes'];\r\n        vm._mdPanel = $mdPanel;\r\n        vm.selected = [];\r\n        vm.file = {};\r\n        vm.newApp = {\r\n            'name' : '',\r\n            'category' : '',\r\n            'desc' : '',\r\n            'imagePath' : '',\r\n            'url' : ''\r\n        };\r\n        vm.editApp = {\r\n            'name' : '',\r\n            'category' : '',\r\n            'desc' : '',\r\n            'imagePath' : '',\r\n            'url' : ''\r\n        };\r\n        var init = function(){\r\n            $http.get('/appsGate/appTxns')\r\n            .then(function(response) {\r\n            vm.apps = response.data;\r\n          })\r\n          .catch(function(response) {\r\n            console.error('Error', response.status, response.data);\r\n          })\r\n          .finally(function() {\r\n            console.log(\"init complete\");\r\n          });\r\n        };\r\n        init();\r\n        vm.newAppPanel = function() {\r\n          var position = vm._mdPanel.newPanelPosition()\r\n              .absolute()\r\n                //.addPanelPosition($mdPanel.xPosition.CENTER, $mdPanel.yPosition.BELOW)\r\n                //.addPanelPosition($mdPanel.xPosition.CENTER, $mdPanel.yPosition.ABOVE)\r\n              .center();\r\n\r\n          var config = {\r\n            attachTo: angular.element(document.body),\r\n            controller: function () {\r\n                return vm;\r\n            },\r\n            controllerAs: 'vm',\r\n            disableParentScroll: vm.disableParentScroll,\r\n            templateUrl: 'panel.tmpl.html',\r\n            hasBackdrop: true,\r\n            panelClass: 'demo-dialog-example',\r\n            position: position,\r\n            trapFocus: true,\r\n            zIndex: 150,\r\n            clickOutsideToClose: true,\r\n            escapeToClose: true,\r\n            focusOnOpen: true\r\n          };\r\n          \r\n        vm._mdPanelRef = vm._mdPanel.create(config);\r\n        vm._mdPanelRef.open();\r\n        //vm._mdPanelRef = mdPanelRef;\r\n        };\r\n\r\n\r\n            // upload later on form submit or something similar\r\n    vm.submit = function() {\r\n      if ($scope.form.file.$valid && $scope.file) {\r\n        $scope.upload($scope.file);\r\n      }\r\n    };\r\n\r\n    // upload on file select or drop\r\n    vm.upload = function () {\r\n        vm.progressVisible = true;\r\n        //var f = angular.element(document.querySelector('#file')).prop(\"files\")[0];\r\n        //console.log(f);\r\n        Upload.upload({\r\n            url: '/appsGate/upload',\r\n            method: 'POST',\r\n            arrayKey: '',\r\n            data: vm.file\r\n        }).then(function (resp) {\r\n            console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\r\n            vm.newApp.imagePath = resp.data.path;\r\n        }, function (resp) {\r\n            console.log('Error status: ' + resp.status);\r\n        }, function (evt) {\r\n            vm.progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n            console.log('progress: ' + vm.progressPercentage + '% ' + evt.config.data.file.name);\r\n        });\r\n    };\r\n\r\n    vm.uploadEdit = function () {\r\n        vm.progressVisible = true;\r\n        //var f = angular.element(document.querySelector('#file')).prop(\"files\")[0];\r\n        //console.log(f);\r\n        Upload.upload({\r\n            url: '/appsGate/upload',\r\n            method: 'POST',\r\n            arrayKey: '',\r\n            data: vm.editfile\r\n        }).then(function (resp) {\r\n            console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\r\n            vm.editApp.imagePath = resp.data.path;\r\n        }, function (resp) {\r\n            console.log('Error status: ' + resp.status);\r\n        }, function (evt) {\r\n            vm.progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n            console.log('progress: ' + vm.editProgressPercentage + '% ' + evt.config.data.file.name);\r\n        });\r\n    };\r\n\r\n    vm.addNewActivity = function(ev){\r\n        if(vm.newApp.name == '' || vm.newApp.category == '' || vm.newApp.desc == '' || vm.newApp.url == '' || vm.newApp.imagePath == '' ){\r\n            $mdToast.show($mdToast.simple().textContent('All fields mandatory!'));\r\n            return;\r\n        }\r\n        $http.post('/appsGate/updateAppTxns', {\"action\" : \"add\", \"txn\" : vm.newApp})\r\n         .then(function(response) {\r\n            //$scope.gists = response.data;\r\n\r\n            init();\r\n          })\r\n          .catch(function(response) {\r\n            console.error('Gists error', response.status, response.data);\r\n          })\r\n          .finally(function() {\r\n            vm.closeDialog();\r\n            $mdToast.show($mdToast.simple().textContent('Application Added!'));\r\n            \r\n          });\r\n    };\r\n\r\n    vm.getImage = function(t){\r\n        console.log(t);\r\n            return t.imagePath.split('\\\\')[t.imagePath.split('\\\\').length-1];\r\n    }\r\n\r\n    vm.editAppDialog = function(txn){\r\n        vm.editApp = txn;\r\n        var position = vm._mdPanel.newPanelPosition()\r\n              .absolute()\r\n                //.addPanelPosition($mdPanel.xPosition.CENTER, $mdPanel.yPosition.BELOW)\r\n                //.addPanelPosition($mdPanel.xPosition.CENTER, $mdPanel.yPosition.ABOVE)\r\n              .center();\r\n\r\n          var config = {\r\n            attachTo: angular.element(document.body),\r\n            controller: function () {\r\n                return vm;\r\n            },\r\n            controllerAs: 'vm',\r\n            disableParentScroll: vm.disableParentScroll,\r\n            templateUrl: 'editpanel.tmpl.html',\r\n            hasBackdrop: true,\r\n            panelClass: 'demo-dialog-example',\r\n            position: position,\r\n            trapFocus: true,\r\n            zIndex: 150,\r\n            clickOutsideToClose: true,\r\n            escapeToClose: true,\r\n            focusOnOpen: true\r\n          };\r\n          \r\n        vm._mdPanelRef = vm._mdPanel.create(config);\r\n        vm._mdPanelRef.open();\r\n        //vm._mdPanelRef = mdPanelRef;\r\n    }\r\n\r\n    vm.confirmEdit = function(ev){\r\n        if(vm.editApp.name == '' || vm.editApp.category == '' || vm.editApp.desc == '' || vm.editApp.url == '' || vm.editApp.imagePath == '' ){\r\n            $mdToast.show($mdToast.simple().textContent('All fields mandatory!'));\r\n            return;\r\n        }\r\n        $http.post('/appsGate/updateAppTxns', {\"action\" : \"update\", \"txn\" : vm.editApp})\r\n         .then(function(response) {\r\n            //$scope.gists = response.data;\r\n            init();\r\n          })\r\n          .catch(function(response) {\r\n            console.error('Gists error', response.status, response.data);\r\n          })\r\n          .finally(function() {\r\n            vm.closeDialog();\r\n            $mdToast.show($mdToast.simple().textContent('Changes Saved!'));\r\n            \r\n          });\r\n    }\r\n\r\n    vm.deleteTxn = function(){\r\n        $http.post('/appsGate/updateAppTxns', {\"action\" : \"delete\", \"txn\" : vm.selected})\r\n         .then(function(response) {\r\n            //$scope.gists = response.data;\r\n\r\n            init();\r\n          })\r\n          .catch(function(response) {\r\n            console.error('Gists error', response.status, response.data);\r\n          })\r\n          .finally(function() {\r\n            vm.closeDialog();\r\n            $mdToast.show($mdToast.simple().textContent('Deleted!'));\r\n            init();\r\n          });\r\n    }\r\n\r\n    vm.closeDialog = function() {\r\n            //var panelRef = vm._mdPanelRef;\r\n            vm.newApp = {\r\n            'name' : '',\r\n            'category' : '',\r\n            'desc' : '',\r\n            'imagePath' : '',\r\n            'url' : ''\r\n        };\r\n        vm.editApp = {\r\n            'name' : '',\r\n            'category' : '',\r\n            'desc' : '',\r\n            'imagePath' : '',\r\n            'url' : ''\r\n        };\r\n            vm._mdPanelRef && vm._mdPanelRef.close().then(function() {\r\n            angular.element(document.querySelector('.demo-dialog-open-button')).focus();\r\n            vm._mdPanelRef.destroy();\r\n          });\r\n        };\r\n    }\r\n\r\n})();","(function() {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .controller('choosePlanController', choosePlanController);\r\n  choosePlanController.$inject = ['$http','$scope','$rootScope','$window','authentication',  '$mdToast', '$location'];\r\n  function choosePlanController ($http,$scope,$rootScope,$window,authentication,  $mdToast, $location) {\r\n\r\n    $scope.query = Object.assign({}, $location.search());\r\n    /*if(!$scope.query.access_token){\r\n      authentication.logout()\r\n      $location.path('/')\r\n    }*/\r\n    var token = JSON.parse(window.atob($scope.query.access_token.split('.')[1]));\r\n    $scope.showPromo = false;\r\n    $scope.imagePath = \"/img/gear.png\";\r\n    $scope.firstname = token.fn\r\n    $scope.lastname = token.ln\r\n    $scope.user = token._id\r\n    $scope.org = token._orgId\r\n    $scope.surl = window.location.origin+'/pay/checkout/success'\r\n    $scope.furl = window.location.origin+'/pay/checkout/failure'\r\n    $scope.email = token.email\r\n\r\n    $scope.pfSuccessRedirectUri = atob($scope.query._rd)\r\n    //$location.url($location.path());\r\n    function init(){\r\n      $http.get('/pFactory/plans/' + $scope.query._a).then(function(success){\r\n        $scope.plans = success.data.all;\r\n        $scope.currentPlan = success.data.this[0]\r\n        console.log($scope.currentPlan)\r\n        $http.post('/pFactory/nextSub', { 'txn': $scope.query._a, '_t' : 'HRMS' }).then(function (success) {\r\n          $scope.nextSub = success.data;\r\n          $scope.nextSub.subOn = moment($scope.nextSub.subOn).format('LLL')\r\n          $scope.nextSub.expireOn = moment($scope.nextSub.expireOn).format('LLL')\r\n          if ($scope.nextSub.expired == true) {\r\n            $scope.message = \"Your \"+ $scope.currentPlan.identifier +\" plan has expired on \" + $scope.nextSub.expireOn;\r\n          }\r\n          if ($scope.nextSub.expired == false) {\r\n            $scope.message = \"Your \"+ $scope.currentPlan.identifier +\" plan will expire in \" + parseInt($scope.nextSub.days) + \" days\";\r\n          }\r\n        }, function (failure) {\r\n          if (failure.status == 400 && failure.data.message) {\r\n            $scope.message = failure.data.message\r\n           }\r\n        })\r\n        authentication.saveToken(success.data.token);\r\n      }, function(error){\r\n        $scope.plans = [];\r\n      })\r\n\r\n      \r\n\r\n      $http.get('/users/getProfile/' + $scope.email).then(function(success){\r\n         $scope.phone = success.data[0].personal_info.mobile\r\n       }, function(error){\r\n          \r\n       })\r\n\r\n\r\n    }\r\n\r\n    init()\r\n\r\n\r\n    //change this to respsective app name\r\n    var appIdentifier = 'PEOPLE'\r\n\r\n    \r\n\r\n    $scope.openMenu = function($mdOpenMenu, ev) {\r\n      originatorEv = ev;\r\n      $mdOpenMenu(ev);\r\n      $('#planDetailsMenu').addClass('arr-down');\r\n    };\r\n\r\n    $scope.$on('$mdMenuClose', function(){\r\n        $('#planDetailsMenu').removeClass('arr-down');    \r\n    })\r\n\r\n\r\n    /*----------  called when user subscribes to any plan | calls different functions depending on free/payment  ----------*/\r\n    $scope.checkout = function(plan){\r\n      if(parseFloat(plan.cost) > 0){\r\n        $scope.getPaymentKeys(plan)\r\n      }\r\n      else{\r\n        $scope.regMod(plan)\r\n      }\r\n    }\r\n\r\n\r\n    $scope.applyPromo = function(plan, code){\r\n      $http.post('/pFactory/applypromo', {\r\n        \"_p\" : plan._id,\r\n        \"_c\" : code\r\n      })\r\n      .then(function(success){\r\n        plan.cost = success.data.amount\r\n        plan.dc = success.data.dc\r\n        plan.dp = success.data.dp\r\n        plan.aa = success.data.aa\r\n        $scope.promoMessage = success.data.message\r\n        $scope.promoIcon = 'check_circle'\r\n        document.getElementById('promoMsg').style.color = 'green'\r\n      }, function(error){\r\n        $scope.promoMessage = error.data.message\r\n        $scope.promoIcon = 'cancel'\r\n        plan.cost = error.data.amount\r\n        plan.dc = error.data.dc\r\n        plan.dp = error.data.dp\r\n        plan.aa = error.data.aa\r\n        document.getElementById('promoMsg').style.color = 'red'\r\n      })\r\n    }\r\n\r\n    $scope.regMod = function(plan){\r\n      $http.post('/pFactory/regMod',\r\n               { \"_p\" : plan._id,\r\n                 \"_o\" : token._orgId,\r\n                 \"_imft\" : token._imft,\r\n                 \"_r\" : $scope.query._r,\r\n                 \"_a\" : $scope.query._a\r\n               })\r\n      .then(function(success){\r\n        //$window.localStorage.removeItem('_pft');\r\n        $window.open($scope.pfSuccessRedirectUri + '?access_token=' + success.data + '&appid=' + $scope.query._a, \"_self\")\r\n        //authentication.saveToken(success.data)\r\n        // $window.localStorage.removeItem('authenticationtoken')\r\n        //$window.open($window.location.origin, \"_self\");\r\n      }, function(error){\r\n        $mdToast.show($mdToast.simple().textContent('Service unavailable at this point of time'));\r\n      })\r\n    }\r\n\r\n\r\n\r\n    // $scope.toPayment = function(plan){\r\n    //   $location.path('/checkout')\r\n    //   .search({plan : plan, orid : token._orgId, rd : $scope.query._rd});\r\n    // }\r\n    \r\n    $scope.submitForm = function(){\r\n      payuform.submit()\r\n    }\r\n\r\n    $scope.getPaymentKeys = function(plan){\r\n      $scope.amount = parseFloat(plan.cost).toFixed(2)\r\n      $scope.plan = plan\r\n      var body = {\r\n        \"a\" : $scope.amount,\r\n        \"fn\" : $scope.firstname,\r\n        \"e\" : $scope.email,\r\n        \"ap\" : plan._id,\r\n        \"o\" : $scope.org,\r\n        \"u\" : $scope.user,\r\n        \"rs\" : $scope.pfSuccessRedirectUri,\r\n        \"dp\" : $scope.plan.dp,\r\n        \"dc\" : $scope.plan.dc,\r\n        \"aa\" : $scope.plan.aa,\r\n        \"origin\" : window.location.href\r\n      }\r\n\r\n      $http.post('/pay/getPaymentKeys', body).then(function(success){\r\n\r\n        \r\n        //$scope.productinfo = success.data.pi\r\n        payuform.productinfo.value = success.data.pi;\r\n        payuform.key.value = success.data.key;\r\n        payuform.hash_string.value = success.data.hashString;\r\n        payuform.hash.value = success.data.hash;\r\n        payuform.txnid.value = success.data.txnid;\r\n        payuform.submit();\r\n      }, function(failure){\r\n\r\n      })\r\n    }\r\n \r\n\r\n\r\n\r\n  \r\n}\r\n\r\n })();\r\n","(function() {\n\n  angular\n    .module('processFactory')\n    .controller('homeCtrl', homeCtrl);\n\n  \thomeCtrl.$inject = ['$http', 'breadcrumbs', '$mdToast', 'authentication','$location', '$scope'];\n    function homeCtrl ($http, breadcrumbs, $mdToast, authentication,$location, $scope) {\n\n\t\t var vm = this;\n\t\t var median = 0;\n     vm.currentUser = authentication.currentUser();\n\t\t vm.selected = [];\n\t\t \n\t\t init = function(){\n\t\t\t$http.post('/pFactory/userCheck', {'email' : authentication.currentUser().email}).success(function(data){\n\t\t\t\tvm.data = data;\n\t\t\t\tconsole.log(vm.data);\n\t\t\t\tvm.order = vm.data.userConfig ? '' : '-noOfHits' ;\n\n\t\t\t\t\n\t\t\t\tfor(var i = 0; i<vm.data.txns.length; i++){\n\t\t\t\t\tmedian += parseInt(vm.data.txns[i].noOfHits)\n\t\t\t\t}\n\t\t\t\tmedian = median/ vm.data.txns.length;\n\t\t\t});\n\t\t}\n\n     init();\n        vm.data = {};\n    \tvm.saveFlag = false;\n    \tvm.showSearch = false;\n    \tvm.limit = 10;\n    \tvm.getCategoryColor = function(cat){\n    \t\treturn {'background-color' : vm.categoryColor[cat]};\n    \t}\n\n\n\t\t\tvm.isMostUsed = function(item){\n\t\t\t\t\n\t\t\t\treturn item.noOfHits >= median\n\t\t\t}\n\n\n    \tvm.click = function(app){\n            var token = authentication.getToken();\n            if(token.charAt(0) == '\"')   token = token.replace('\"', '');\n            if(token.endsWith('\"'))  token = token.replace('\"', '');\n            var link = app.txn.url + '?access_token=' + token + '&appid=' + app.txn._id;\n            //console.log(\"link :: \"+link);\n    \t\twindow.open(link, '_blank');\n\t\t\t\t$http.post('/pFactory/noOfHits', {'userId' : vm.data._id, 'txnId' : app.txn._id}).then(function(success){\n\t\t\t\t\tinit();\n\t\t\t\t});\n\t\t\t\t\n    \t};\n\n      vm.breadcrumbs = breadcrumbs;\n  \t  vm.Math = window.Math;\n  \t  vm.parseInt = parseInt;\n  \t  //vm.split = split;\n      //console.log('Home controller is running');\n       //console.log(authentication.currentUser().email);\n\n      \n      \n      \n\n      vm.logout = function(){\n        $http.get('/pFactory/logout/')\n          .then(function(response) {\n            //$scope.gists = response.data;\n            //console.log(response);\n            if(response.status === 200){\n              authentication.logout();\n              $location.path('/');\n            }\n          })\n          .catch(function(response) {\n            //console.error('Gists error', response.status, response.data);\n          })\n          .finally(function() {\n            //console.log(\"finally finished gists\");\n          });\n      }\n\n      vm.getImage = function(t){\n        //console.log(t);\n            return t.split('\\\\')[t.split('\\\\').length-1];\n    }\n\n    vm.openMenu = function($mdOpenMenu, ev) {\n      originatorEv = ev;\n      $mdOpenMenu(ev);\n      $('#profileMenu').addClass('arr-down');\n    };\n\n    $scope.$on('$mdMenuClose', function(){\n        $('#profileMenu').removeClass('arr-down');    \n    })\n\n}\n\n})();\n","(function() {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .controller('paymentController', paymentController);\r\n  paymentController.$inject = ['$http','$scope','$rootScope','$window','authentication', '$mdToast','$mdDialog', '$location'];\r\n  function paymentController ($http,$scope,$rootScope,$window,authentication, $mdToast,$mdDialog, $location) {\r\n  \t\r\n    //change this to respsective app name\r\n    var appIdentifier = 'PEOPLE'\r\n\r\n    $scope.email = authentication.currentUser().email\r\n\r\n    function init(){\r\n      $http.get('/users/getProfile/' + $scope.email).then(function(success){\r\n        $scope.phone = success.data[0].personal_info.mobile\r\n      }, function(error){\r\n        // \r\n      })\r\n    }\r\n    init()\r\n\r\n  \tvar query = $location.search()\r\n    $scope.plan = query.plan\r\n    $scope.plan.cost = parseFloat($scope.plan.cost).toFixed(2)\r\n  \t$scope.imagePath = \"/img/gear.png\";\r\n  \t$scope.productinfo = appIdentifier + \" - \" + $scope.plan.identifier\r\n  \t$scope.firstname = authentication.currentUser().fn\r\n  \t$scope.lastname = authentication.currentUser().ln\r\n    $scope.user = authentication.currentUser()._id\r\n    $scope.org = authentication.currentUser().org\r\n  \t$scope.surl = window.location.origin+'/pay/checkout/success'\r\n  \t$scope.furl = window.location.origin+'/pay/checkout/failure'\r\n    $scope.pfSuccessRedirectUri = window.location.origin+ $scope.org + '/checkout/success'\r\n    $scope.pfFailureRedirectUri = window.location.origin+ $scope.org + '/checkout/failure'\r\n  \t//$scope.cost = parseFloat('1000');\r\n  \t$scope.submitForm = function(){\r\n  \t\tpayuform.submit()\r\n  \t}\r\n\r\n  \t$scope.getPaymentKeys = function(){\r\n      var body = {\r\n        \"a\" : $scope.plan.cost,\r\n        \"pi\" : $scope.productinfo,\r\n        \"fn\" : $scope.firstname,\r\n        \"e\" : $scope.email,\r\n        \"ap\" : $scope.plan._id,\r\n        \"o\" : $scope.org,\r\n        \"u\" : $scope.user,\r\n        \"rs\" : $scope.pfSuccessRedirectUri,\r\n        \"rf\" : $scope.pfFailureRedirectUri\r\n      }\r\n      console.log(body)\r\n  \t\t$http.post('/pay/getPaymentKeys', body).then(function(success){\r\n  \t\t\tpayuform.elements[\"key\"].value = success.data.key\r\n  \t\t\tpayuform.elements[\"hash_string\"].value = success.data.hashString\r\n  \t\t\tpayuform.elements[\"hash\"].value = success.data.hash\r\n  \t\t\tpayuform.elements[\"txnid\"].value = success.data.txnid\r\n  \t\t\tpayuform.submit();\r\n  \t\t}, function(failure){\r\n\r\n  \t\t})\r\n  \t}\r\n\r\n  }\r\n\r\n\r\n })();\r\n","(function() {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .controller('paymentFailureController', paymentFailureController);\r\n  paymentFailureController.$inject = ['$http','$scope','$rootScope','$window','authentication', '$mdToast','$mdDialog', '$location'];\r\n  function paymentFailureController ($http,$scope,$rootScope,$window,authentication, $mdToast, $mdDialog, $location) {\r\n  \t\r\n  \t$scope.query = $location.search()\r\n\r\n  \tif($scope.query.hasOwnProperty('txnid')){\r\n  \t\t$http.get('/pay/g/' + $scope.query.txnid).then(function(success){\r\n  \t\t}, function(error){\r\n\r\n  \t\t})\r\n  \t}\r\n  }\r\n\r\n\r\n })();\r\n","(function() {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .controller('paymentSuccessController', paymentSuccessController);\r\n  paymentSuccessController.$inject = ['$http','$scope','$rootScope','$window','auth', '$state', '$stateParams', '$mdToast','$mdDialog'];\r\n  function paymentSuccessController ($http,$scope,$rootScope,$window,auth, $state, $stateParams, $mdToast,$mdDialog) {\r\n  \t\r\n  \t\r\n  }\r\n\r\n\r\n })();\r\n","(function() {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .controller('setupCtrl', setupCtrl);\r\n\r\n  \tsetupCtrl.$inject = ['$http', '$mdToast', 'authentication', '$location', 'Upload'];\r\n    function setupCtrl ($http,  $mdToast, authentication,$location, Upload, $scope) {\r\n      var vm = this;\r\n      vm.noOfTabs = 2;\r\n      vm.isSelected = false;\r\n      vm.sectors = [\"AGRICULTURE\", \"AUTOMOBILES\", \"AUTO COMPONENTS\" , \"AVIATION\", \"BANKING\", \"BIOTECHNOLOGY\", \"CEMENT\", \"CONSUMER MARKETS\", \"EDUCATION AND TRAINING\", \"ENGINEERING\", \"FINANCIAL SERVICES\", \"FOOD PROCESSING\", \"GEMS AND JEWELLERY\", \"HEALTHCARE\", \"INFRASTRUCTURE\", \"INSURANCE\", \"IT & ITES\", \"MANUFACTURING\", \"MEDIA AND ENTERTAINMENT\", \"OIL AND GAS\", \"PHARMACEUTICALS\", \"REAL ESTATE\", \"RESEARCH AND DEVELOPMENT\", \"RETAIL\", \"SCIENCE AND TECHNOLOGY\", \"SEMICONDUCTOR\", \"SERVICES\", \"STEEL\", \"TELECOMMUNICATIONS\", \"TEXTILES\", \"TOURISM AND HOSPITALITY\", \"URBAN MARKET\", \"OTHERS\"];\r\n      vm.strengths = [\"< 10\", \"10 - 100\", \"101-500\" , \"501-1000\" , \" > 1000\"];\r\n      vm.selectedTab = 0;\r\n      vm.notification=\"\";\r\n      \r\n      vm.username = authentication.currentUser().name;\r\n      vm.disableNext = true;\r\n      vm.orgName = authentication.currentUser().orgName;\r\n      vm.commit = function() {\r\n        str = \"form\" + (vm.selectedTab+1);\r\n        if(document.getElementsByName(str)[0].checkValidity()){\r\n            vm.notification = \"\";\r\n            if(vm.selectedTab == 0){\r\n              $http.post('/pFactory/setupOrg/'+ authentication.currentUser().org, vm.org).then(\r\n                function(success){\r\n\r\n                  $http.post('/pFactory/commitImft', {\"_i\" : authentication.currentUser()._id}).then(\r\n                    function(s){\r\n                      $http.get('/users/new_t?token='+ window.localStorage._pft).then(\r\n                        function(success){\r\n                          authentication.saveToken(success.data.success);\r\n                          $location.path('/');\r\n                        }, function(err){\r\n                          $mdToast.show(\r\n                            $mdToast.simple()\r\n                              .textContent('Try again.')\r\n                              .position('top right')\r\n                              .hideDelay(3000)\r\n                          );\r\n                        }\r\n                      );\r\n                    }, function(error){\r\n                      console.log(\"error\", error);\r\n                      $mdToast.show(\r\n                        $mdToast.simple()\r\n                          .textContent('Try again.')\r\n                          .position('top right')\r\n                          .hideDelay(3000)\r\n                      );\r\n                    }\r\n                  )\r\n                }, function(error){\r\n                  console.log(\"error\", error);\r\n                }\r\n              )\r\n            }\r\n        }\r\n        else {\r\n          vm.notification=\"Please fill in the mandatory fields\";\r\n        }\r\n      }\r\n\r\n      // upload on file select or drop\r\n      vm.upload = function () {\r\n          vm.progressVisible = true;\r\n          //var f = angular.element(document.querySelector('#file')).prop(\"files\")[0];\r\n          //console.log(f);\r\n          Upload.upload({\r\n              url: '/pFactory/upload',\r\n              method: 'POST',\r\n              arrayKey: '',\r\n              data: vm.file\r\n          }).then(function (resp) {\r\n              console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\r\n              vm.org.logo = resp.data.path;\r\n          }, function (resp) {\r\n              console.log('Error status: ' + resp.status);\r\n          }, function (evt) {\r\n              vm.progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n              console.log('progress: ' + vm.progressPercentage + '% ' + evt.config.data.file.name);\r\n          });\r\n      };\r\n\r\n\r\n      vm.logout = function(){\r\n        $http.get('/pFactory/logout/')\r\n          .then(function(response) {\r\n            //$scope.gists = response.data;\r\n            //console.log(response);\r\n            if(response.status === 200){\r\n              authentication.logout();\r\n              $location.path('/');\r\n            }\r\n          })\r\n          .catch(function(response) {\r\n            //console.error('Gists error', response.status, response.data);\r\n          })\r\n          .finally(function() {\r\n            //console.log(\"finally finished gists\");\r\n          });\r\n      }\r\n    }\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n  .module('processFactory')\r\n  .controller('forgotCtrl', forgotCtrl);\r\n\r\n  forgotCtrl.$inject = ['$location', 'authentication'];\r\n  function forgotCtrl($location, authentication) {\r\n    debugger;\r\n    var vm = this;\r\n    vm.showResponse=\"\";\r\n    vm.forgot = {\r\n      email : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      authentication\r\n        .forgot(vm.forgot)\r\n        .error(function(err){\r\n        })\r\n        .then(function(response){\r\n          //$location.path('home');\r\n          vm.showResponse = response.data;\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();","(function () {\n\n  angular\n  .module('processFactory')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n    vm.notification = \"\";\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      vm.notification = \"\";\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          vm.notification = err.message;\n     return;   })\n        .then(function(){\n          $location.path('/home');\n        });\n    };\n\n  }\n\n})();\n","(function () {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication', '$window'];\r\n  function registerCtrl($location, authentication, $window) {\r\n    var vm = this;\r\n    vm.notification = \"\";\r\n    vm.register = {\r\n      first_name : \"\",\r\n      last_name : \"\",\r\n      email : \"\",\r\n      password : \"\",\r\n      organization : \"\"\r\n    };\r\n\r\n\r\n    vm.fireConversion = function() {\r\n      window.google_trackConversion({\r\n        google_conversion_id : 945159590,\r\n        google_conversion_language : \"en\",\r\n        google_conversion_format : \"3\",\r\n        google_conversion_color : \"ffffff\",\r\n        google_conversion_label : \"f1CbCNSgnXUQpvvXwgM\",\r\n        google_remarketing_only : false\r\n      });\r\n      }\r\n\r\n    vm.onSubmit = function () {\r\n      vm.notification = \"\";\r\n      //console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.register)\r\n        .error(function(err){\r\n          //console.error(err.errmsg);\r\n            vm.notification = err.message;\r\n        })\r\n        .then(function(response){\r\n          //$location.path('home');\r\n          if(response.status == 200){\r\n            vm.showConfirmation = true;\r\n            vm.customer_id = response.data.custId;\r\n            /** UNCOMMENT ONLY ON PRODUCTION ENVIRONMENT FOR ADWORDS CONVERSION ONLY ON PROD */\r\n            //vm.fireConversion();\r\n          }\r\n          else{\r\n            vm.notification = response.message;\r\n          }\r\n        });\r\n    };\r\n\r\n    vm.forMobile = function(e){\r\n      if((e.keyCode >= 48 && e.keyCode <= 57) || e.keyCode == 9 || e.keyCode == 8 || e.keyCode == 46 || e.keyCode == 37 || e.keyCode == 39){\r\n\r\n      }\r\n      else\r\n        e.preventDefault();\r\n    }\r\n\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .service('authentication', authentication);\r\n\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      $window.localStorage['_pft'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      return $window.localStorage['_pft'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        //return payload.exp > Date.now() / 1000;\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        return {\r\n          email : payload.email,\r\n          name : payload.name,\r\n          org : payload._orgId,\r\n          orgName : payload._orgName,\r\n          _id : payload._id,\r\n          _imft : payload.pf_imft,\r\n          fn : payload.fn,\r\n          ln : payload.ln,\r\n          _m : payload._m,\r\n          _mv : payload._mv,\r\n          _pfr : payload._pfr\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n      return $http.post('/pFactory/register', user).success(function(data){\r\n        //saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    forgot = function(email) {\r\n      return $http.post('/pFactory/forgot' , email).success(function(data){\r\n\r\n      });\r\n    }\r\n\r\n    login = function(user) {\r\n      return $http.post('/pFactory/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    logout = function() {\r\n      $window.localStorage.removeItem('_pft');\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout,\r\n      forgot : forgot\r\n    };\r\n  }\r\n\r\n\r\n})();\r\n","(function() {\n\n    \t  angular\n    \t    .module('processFactory')\n    \t    .service('breadcrumbHelper', breadcrumbHelper);\n\n    \t  breadcrumbHelper.$inject = ['$http'];\n    \t  function breadcrumbHelper ($http) {\n    \t\t  var _data = {};\n\n    \t\t\t    return {\n    \t\t\t        getProp:  function (name) {               \n    \t\t\t            return _data[name];\n    \t\t\t        },\n    \t\t\t        setProp: function (name,value) {\n    \t\t\t            _data[name] = value;\n    \t\t\t        }\n    \t\t\t    };\n    \t  }\n    \t})();","(function() {\n\n  angular\n    .module('processFactory')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/pFactory/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();","(function() {\n\n  angular\n    .module('processFactory')\n    .factory('metadata', metadata);\n\n  metadata.$inject = ['$http'];\n  function metadata ($http) {\n\t  \n\t  return{\n\t      get: function(){\n\t           return $http.get('/getMetadata');\n\t      }\n\t    };\n\t  \n\t/*    var metaData = {};\n\t$http.get('/getMetadata').success(function(data){\n\t\tif(data){\n\t\t\tmetaData = data;\n\t\t    var getprojectTypes = \tfunction () {\n\t\t    \treturn metaData.projectTypes;\n\t\t    };\n\t\t    return {\n\t\t    \tgetprojectTypes : getprojectTypes\n\t\t    };\n\t\t}\n\t});*/\n  }\n\n})();","(function () {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .service('notification', notification);\r\n\r\n  notification.$inject = ['$http', '$window', 'authentication'];\r\n  function notification ($http, $window, authentication) {\r\n    notifs = new Array()\r\n\r\n    init = function() {\r\n      var socket = io.connect('/notif');\r\n      socket.on(authentication.currentUser().org + '/' + 'pf' + '/' + authentication.currentUser()._id, function (data) {\r\n        //console.log('socket emit recieved');\r\n        //init();\r\n        //vm.logout();\r\n        //socket.emit('my other event', { my: 'data' });\r\n        console.log(JSON.stringify(data))\r\n        notifs.push(data)\r\n        console.log(notifs)\r\n        \r\n      });\r\n      return notifs;\r\n    };\r\n\r\n    return {\r\n      init : init\r\n    };\r\n  }\r\n\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .factory('errorInterceptor', errorInterceptor);\r\n\r\n    errorInterceptor.$inject = ['$q', '$window'];\r\n\r\n    function errorInterceptor($q,$window) {\r\n\r\n   var preventFurtherRequests = false;\r\n\r\n   return {\r\n       request: function (config) {\r\n\r\n           if (preventFurtherRequests) {\r\n               return;\r\n           }\r\n\r\n           return config || $q.when(config);\r\n       },\r\n       requestError: function(request){\r\n                       //console.log(\"error\");\r\n           return $q.reject(request);\r\n       },\r\n       response: function (response) {\r\n           return response || $q.when(response);\r\n       },\r\n       responseError: function (response) {\r\n                       //console.log(response);\r\n\r\n           if (response && response.status === 401) {\r\n               //console.log(\"401 error\");\r\n                               $window.localStorage.removeItem('_pft');\r\n                               $window.location.href = window.location.origin;\r\n           }\r\n\r\n\r\n           return $q.reject(response);\r\n       }\r\n   };\r\n}\r\n\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .controller('notificationCtrl', notificationCtrl);\r\n\r\n  notificationCtrl.$inject = ['$location','authentication', '$mdMenu', '$scope', '$sce', '$http'];\r\n  function notificationCtrl($location, authentication, $mdMenu, $scope, $sce, $http) {\r\n    var notifvm = this;\r\n    var socket\r\n    notifvm.notifs = new Array()\r\n    $scope.unseenCount = 0;\r\n    function init(){\r\n      /*----------  creates and listens to socket namespace '/notifs' on pf  ----------*/\r\n      socket = io.connect('/notif');\r\n      //console.log('socket listening on : ', authentication.currentUser().org + '/' + 'pf' + '/' + authentication.currentUser()._id)\r\n      socket.on(authentication.currentUser().org + '/' + 'pf' + '/' + authentication.currentUser()._id, function (data) {\r\n      \r\n        data.item.sentence = $sce.trustAsHtml(data.item.sentence + ' by ' + '<b>'+data.item.from.name+'</b>') \r\n        notifvm.notifs.unshift(data)\r\n        updateNotifBadge();\r\n\r\n        \r\n      });\r\n      /*----------  call REST API to fetch last 10 notifs  ----------*/\r\n      $http.get('/notifs/notifications/' + authentication.currentUser().org + '/' + 'pf' + '/' + authentication.currentUser()._id)\r\n      .then(function(success){\r\n        _.each(success.data, function(d){\r\n          d.item.sentence = $sce.trustAsHtml(d.item.sentence + ' by ' + '<b>'+d.item.from.name+'</b>') \r\n\r\n        })\r\n        notifvm.notifs = success.data;\r\n\r\n        updateNotifBadge();\r\n      }, function(error){\r\n\r\n      })\r\n    }\r\n    init();\r\n\r\n    notifvm.getTimeDiff = function(date){\r\n      return moment(date).fromNow()\r\n    }\r\n\r\n\r\n    function updateNotifBadge(){\r\n      document.getElementById('notifBadge').innerText = (_.where(notifvm.notifs, {seen: false})).length\r\n    }\r\n\r\n    notifvm.openMenu = function($mdOpenMenu, ev) {\r\n      var updateNotifArray = new Array()\r\n      originatorEv = ev;\r\n      $mdOpenMenu(ev);\r\n      $('#notifMenu').addClass('arr-down');\r\n      _.each(notifvm.notifs, function(n){\r\n        if(!n.seen){\r\n          updateNotifArray.push(n._id)\r\n        }\r\n        n.seen = true\r\n      })\r\n      updateNotifBadge()\r\n      if(updateNotifArray.length != 0)\r\n        socket.emit('updateNotif', updateNotifArray)\r\n    };\r\n\r\n    $scope.$on('$mdMenuClose', function(){\r\n        $('#notifMenu').removeClass('arr-down');    \r\n    })\r\n\r\n    /**\r\n     *\r\n     * the following function is designed for $routeProvider, and not $stateProvider;\r\n     * please modify the function if you are using $stateProvider\r\n     */\r\n    notifvm.goToNotif = function(notif){\r\n      var path = '/' + notif.item.module;\r\n      if(notif.item.navId) path = path + '/' + notif.item.navId;\r\n      socket.emit('updateAction', notif._id)\r\n      $location.path(path);\r\n    }\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .directive('notification', notification);\r\n\r\n  function notification () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/notification/notification.template.html',\r\n      controller: 'notificationCtrl as notifvm'\r\n    };\r\n  }\r\n\r\n})();","(function () {\n\n  angular\n    .module('processFactory')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication', '$mdSidenav', '$mdUtil', 'breadcrumbs', '$routeParams'];\n  function navigationCtrl($location, authentication, $mdSidenav, $mdUtil, breadcrumbs, $routeParams) {\n    var vm = this;\n    vm.breadcrumbs = breadcrumbs;\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n    vm.toggleLeft = buildToggler('left');\n    function buildToggler(navID) {\n        var debounceFn = $mdUtil.debounce(function () {\n            $mdSidenav(navID)\n                .toggle()\n        }, 100);\n        return debounceFn;\n    };\n    vm.close = function(){\n    \t$mdSidenav('left').open()\n        .then(function () {\n          //$log.debug(\"close LEFT is done\");\n        });\n    };\n  }\n\n})();\n","(function () {\n\n  angular\n    .module('processFactory')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();","(function () {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .controller('pwStrengthCtrl', pwStrengthCtrl);\r\n\r\n  pwStrengthCtrl.$inject = ['$scope'];\r\n  function pwStrengthCtrl($scope) {\r\n    $scope.pw = '';\r\n\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n    .module('processFactory')\r\n    .directive('pwStrength', pwStrength);\r\n\r\n  function pwStrength () {\r\n    return {\r\n            replace: false,\r\n            restrict: 'EACM',\r\n            scope: { model: '=pwStrength' },\r\n            link: function (scope, element, attrs) {\r\n                var strength = {\r\n                    colors: ['#F00', '#F90', '#FF0', '#9F0', '#0F0'],\r\n                    mesureStrength: function (p) {\r\n                        var _force = 0;\r\n                        var _regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; \r\n                               \r\n                        var _lowerLetters = /[a-z]+/.test(p);                    \r\n                        var _upperLetters = /[A-Z]+/.test(p);\r\n                        var _numbers = /[0-9]+/.test(p);\r\n                        var _symbols = _regex.test(p);\r\n                                              \r\n                        var _flags = [_lowerLetters, _upperLetters, _numbers, _symbols];                    \r\n                        var _passedMatches = $.grep(_flags, function (el) { return el === true; }).length;                                          \r\n                        \r\n                        _force += 2 * p.length + ((p.length >= 10) ? 1 : 0);\r\n                        _force += _passedMatches * 10;\r\n                            \r\n                        // penality (short password)\r\n                        _force = (p.length <= 6) ? Math.min(_force, 10) : _force;                                      \r\n                        \r\n                        // penality (poor variety of characters)\r\n                        _force = (_passedMatches == 1) ? Math.min(_force, 10) : _force;\r\n                        _force = (_passedMatches == 2) ? Math.min(_force, 20) : _force;\r\n                        _force = (_passedMatches == 3) ? Math.min(_force, 40) : _force;\r\n                        \r\n                        return _force;\r\n                    },\r\n                    getColor: function (s) {\r\n                       var idx = 0;\r\n                        if (s <= 10) { idx = 0; }\r\n                        else if (s <= 20) { idx = 1; }\r\n                        else if (s <= 30) { idx = 2; }\r\n                        else if (s <= 40) { idx = 3; }\r\n                        else { idx = 4; }\r\n\r\n                        return { idx: idx + 1, col: this.colors[idx] };\r\n                    }\r\n                };\r\n                \r\n                scope.$watch('model', function (newValue, oldValue) {\r\n                    if (!newValue || newValue === '') {\r\n                        element.css({ \"display\": \"none\"  });\r\n                    } else {\r\n                        var c = strength.getColor(strength.mesureStrength(newValue));\r\n                        element.css({ \"display\": \"inline\" });\r\n                        element.children('li')\r\n                            .css({ \"background\": \"#DDD\" });\r\n                            //.slice(0, c.idx).css({ \"background\": c.col });\r\n                            for(var i = 0; i<=c.idx; i++){\r\n                                $((element.children('li'))[i]).css({ \"background\": c.col });\r\n                            }\r\n                    }\r\n                });\r\n                \r\n            },\r\n            template: '<li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li><li class=\"point\"></li>'\r\n        };\r\n  }\r\n\r\n})();"]}